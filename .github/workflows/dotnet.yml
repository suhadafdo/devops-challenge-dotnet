name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ main, develop ]

permissions:
  packages: write

jobs:
  CI:

    runs-on: ubuntu-latest

    steps:
    
    - name: Run Docker SQL
      run: docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=YourStrong@Passw0rd" -p 1433:1433 --name sql1 --hostname sql1 -d mcr.microsoft.com/mssql/server:2022-latest
      
#    - name: Run sqlclient
#      run: sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -d tempdb -Q "SELECT @@version;"
      
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -o devops-package
      env:  
        CONNECTIONSTRINGS__DATABASE: "Server=localhost;Database=DevOpsChallenge.SalesApi;User Id=sa;Password=YourStrong@Passw0rd;"
    
    - name: run background
      run: ./devops-package/DevOpsChallenge.SalesApi &
      env:  
        CONNECTIONSTRINGS__DATABASE: "Server=localhost;Database=DevOpsChallenge.SalesApi;User Id=sa;Password=YourStrong@Passw0rd;"

    - name: Curl Test
      run: curl -v http://localhost:5000/api/sales
      
    - name: Test
      continue-on-error: true
      run: sleep 10 && dotnet test --verbosity normal
      env:
        SALES_API_ENDPOINT: http://localhost:5000/api/sales
        CONNECTIONSTRINGS__DATABASE: "Server=localhost;Database=DevOpsChallenge.SalesApi;User Id=sa;Password=YourStrong@Passw0rd;"

    - name: Docker Build
      run: docker build -t ghcr.io/suhadafdo/devopschallenge:${{ github.sha }} .

    - name: Scan Docker Image using Trivy
      continue-on-error: true
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'image'
        image-ref: ghcr.io/suhadafdo/devopschallenge:${{ github.sha }}
        exit-code: 1
        format: 'sarif'
        output: 'trivy-image-results.sarif'
        severity: 'MEDIUM,HIGH,CRITICAL'

    - name: Docker login
      uses: docker/login-action@v1
      with:
        username: suhadafdo
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io

    - name: docker push
      run: docker push ghcr.io/suhadafdo/devopschallenge:${{ github.sha }}
    




#    - name: Sample test
#      run: ls -al ./devops-package
#  unit-tests:
#    runs-on: ubuntu-latest
#    needs:
#      - build
#    steps:

